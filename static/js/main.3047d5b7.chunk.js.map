{"version":3,"sources":["pages/home/HomePage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/people/PeoplePage.tsx","pages/notFound/NotFoundPage.tsx","components/CustomNavLink.tsx","components/Navbar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","to","slug","classNames","sex","name","headers","id","title","PeopleTable","people","useParams","map","header","born","died","mother","motherName","father","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","hasError","setHasError","loadPeople","loadedPeople","peopleWithParents","find","m","f","Object","assign","useEffect","hasNoPeople","length","NotFoundPage","CustomNavLink","isActive","Navbar","role","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3047d5b7.chunk.js","sourcesContent":["export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person;\n}\n\nexport const PersonLink: FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={person.slug}\n      className={classNames({\n        'has-text-danger': person.sex === 'f',\n      })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import { FC } from 'react';\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  people: Person[];\n}\n\nconst headers = [\n  { id: 1, title: 'Name' },\n  { id: 2, title: 'Sex' },\n  { id: 3, title: 'Born' },\n  { id: 4, title: 'Died' },\n  { id: 5, title: 'Mother' },\n  { id: 6, title: 'Father' },\n];\n\nexport const PeopleTable: FC<Props> = ({ people }) => {\n  const { slug } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {headers.map(header => <th key={header.id}>{header.title}</th>)}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames({\n              'has-background-warning': person.slug === slug,\n            })}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              { person.mother\n                ? <PersonLink person={person.mother} />\n                : person.motherName ?? '-'}\n            </td>\n            <td>\n              { person.father\n                ? <PersonLink person={person.father} />\n                : person.fatherName ?? '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const loadPeople = async () => {\n    try {\n      setIsLoading(true);\n\n      const loadedPeople = await getPeople();\n\n      const peopleWithParents = loadedPeople.map(person => {\n        const mother = loadedPeople\n          .find(m => m.name === person.motherName);\n        const father = loadedPeople\n          .find(f => f.name === person.fatherName);\n\n        return Object.assign(person, { father, mother });\n      });\n\n      setPeople(peopleWithParents);\n    } catch (e) {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPeople();\n  }, []);\n\n  const hasNoPeople = !isLoading && !people.length;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {hasNoPeople && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!isLoading && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { FC } from 'react';\nimport { NavLink, To } from 'react-router-dom';\nimport classNames from 'classnames';\n\ninterface Props {\n  to: To;\n  title: string;\n}\n\nexport const CustomNavLink: FC<Props> = ({ to, title }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => {\n      return classNames('navbar-item', {\n        'has-background-grey-lighter': isActive,\n      });\n    }}\n  >\n    {title}\n  </NavLink>\n);\n","import { CustomNavLink } from './CustomNavLink';\n\nexport const Navbar = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <CustomNavLink\n          to=\"/\"\n          title=\"Home\"\n        />\n        <CustomNavLink\n          to=\"/people\"\n          title=\"People\"\n        />\n      </div>\n    </div>\n  </nav>\n);\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport { HomePage } from './pages/home/HomePage';\nimport { PeoplePage } from './pages/people/PeoplePage';\nimport { NotFoundPage } from './pages/notFound/NotFoundPage';\n\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"*\" element={<NotFoundPage />} />\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}